# JOE syntax highlight file for JAVA

# Needs: \uXXXX for unicode in strings
# improve escape parsing

=Idle
=Preproc 	blue
=Define		bold blue
=Comment 	green
=Constant 	cyan
=Escape 	bold cyan
=Type 		bold
=Keyword 	bold
=Operator	bold

:idle Idle
	*		idle
	"\n"		idle
	"/"		slash
	"0-9"		first_digit	recolor=-1
	"."		maybe_float
	"\""		string		recolor=-1
	"'"		char		recolor=-1
	"a-zA-Z_"	ident		buffer

:slash Idle
	*		idle		noeat
	"*"		comment		recolor=-2
	"/"		line_comment	recolor=-2

:comment Comment
	*		comment
	"*"		maybe_end_comment

:maybe_end_comment Comment
	*		comment
	"/"		idle
	"*"		maybe_end_comment

:line_comment Comment
	*		line_comment
	"\n"		idle

:first_digit Constant
	*		idle	noeat	recolor=-1
	"xX"		hex
	"."		float
	"0-9"		first_number

:hex Constant
	*		idle	noeat	recolor=-1
	"0-9A-Fa-f"	hex

:first_number Constant
	*		idle	noeat	recolor=-1
	"0-9"		first_number
	"."		float

:maybe_float Constant
	*		idle	recolor=-2	noeat
	"0-9"		float		recolor=-2

:float Constant
	*		idle	noeat	recolor=-1
	"eE"		epart
	"0-9"		float

:epart Constant
	*		idle	noeat	recolor=-1
	"0-9+\-"	enum

:enum Constant
	*		idle	noeat	recolor=-1
	"0-9"		enum

:string	Constant
	*		string
	"\""		idle
	"\\"		string_escape	recolor=-1

:string_escape Escape
	*		string
	"\n"		string		recolor=-2

:char Constant
	*		char
	"\n"		idle
	"'"		idle
	"\\"		char_escape	recolor=-1

:char_escape	Escape
	*		char
	"\n"		char		recolor=-2

:ident Idle
	*		idle		noeat strings
	"abstract"	kw
	"boolean"	type
	"break"		kw
	"byte"		type
	"case"		kw
	"catch"		kw
	"char"		type
	"class"		kw
	"const"		kw
	"continue"	kw
	"default"	kw
	"do"		kw
	"double"	type
	"else"		kw
	"extends"	kw
	"final"		kw
	"finally"	kw
	"float"		type
	"for"		kw
	"goto"		kw
	"if"		kw
	"implements"	kw
	"import"	kw
	"instanceof"	operator
	"int"		type
	"interface"	kw
	"long"		type
	"native"	kw
	"new"		operator
	"null"		lit
	"package"	kw
	"private"	kw
	"protected"	kw
	"public"	kw
	"return"	kw
	"short"		type
	"static"	kw
	"super"		kw
	"switch"	kw
	"synchronized"	kw
	"this"		kw
	"throw"		kw
	"throws"	kw
	"transient"	kw
	"try"		kw
	"void"		kw
	"volatile"	kw
	"while"		kw
	"true"		lit
	"false"		lit
done
	"a-zA-Z0-9_"	ident

:type Type
	*	idle	noeat

:kw Keyword
	*	idle	noeat

:lit Constant
	*	idle	noeat

:operator Operator
	*	idle	noeat
